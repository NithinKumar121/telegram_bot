{
    " ":{
        "image":"",
        "explanation":"",
        "syntax": " ",
        "next":""
    },


    "python_introduction":{
        "image":"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoAx_rNeRs5LAy-xQqVBv8sIQ9NLZNpwhtZw&usqp=CAU",
        "explanation":"Python is a high-level programming language known for its simplicity and readability, widely used for web development, data analysis, and automation. Its extensive library ecosystem and dynamic typing make it a versatile tool for various applications.",
        "syntax": " ",
        "next":"Next Topic\n /python_hello_world "
    },

    "python_hello_world":{
        "image":"https://lh3.googleusercontent.com/u/0/drive-viewer/AFGJ81pe_3VccC-S8PPeZ6r_I6f2Cp3vUVBfOTC9CjGz4-jJ1JNKV_ZLJDsx7jILSnej74oFv0zSgKJrBLOfkcBYXaPykPnoqg=w1920-h892",
        "explanation":"To print hello world you can use this syntax",
        "syntax": "print(\"hello world\")",
        "next":"Next Topic\n /python_comment_line"
    },

    "python_comment_line":{
        "image":"https://lh3.googleusercontent.com/fife/APg5EObw6-4mQpoxbzJPzwmEsa6ON5Qn5J6mji0Y1s-ME4ONUO2dIVIKsZ0GIld5C_k_l-UXXTxOqGwIzobDL5rIVII6tUfeu4UfQsuaQZy_D868WnL_rON5wHPEjBRdPMjZ6Lm5oESrgER_aqW-knbIhkrDiEJ4QNDtP0gvc0DLeRNHrOfwik5NY59gk-gRhRTsucgWzLTGUpVfE-dM2rrcGL0EdXc4AiML1rdEMu0kGKrShbLXIn0VLDbl2v2fWeTi47buClIGbFTr-_p_esYVRc9E1xKr-UBxoYMcwMPok-El-PJfMi5t10qZyNPqcXV9_n8sWPKdnq38azyaPaAVRJfmXaxATBXS6qj6bZqEQJ1rxw0cdbeHt6iSNBep3TJc9Fhxilw644QpLKxSnzdn0vQ1Rxf5TqDMUXrak3RLb8d_rEdA5LJpr3PY6KIDrblnjHLV17lNLRhWIqrH4LdN25FFzxmFYO4pdC7ROUcOA3Lha-dfU0A0DcJ4uwB-1y1VzL7XbbK0p19C_nz7UxG3-6NRvqNCJGDaT7kYesE5bTYa14XnDE2A2Dc-f89pDqGQsElV_JhPpquwIm-wtzSaLfzMzM6BPmgMPSQ4oYxOxZujGiKV1ToWBVEj3XYp_VN8B_yrw0QrzBl32HApLfuIqAdvdhau61miENYpel4G5KxvRVyRSlo8dLZhrgY39ue-C6YQadDUs9r4IZqHzYLzxfhc2P5348ytlIZdBUJNe4Yv-c-0spUhq-zGkQsP5s2qinfTT635swaRyP_hcD3p99LoSKZUqIKOQSv28_PJ-bD1B6GeRaF2xSUWuBHhSbuuquwHLCxOUWbT01mWb3RMEtQdWgnP2cx0iuX1RYMvvkKak1ldQVEDAE8hBeuUceAK2ngV4s6ALIl3HQKxUby6uMvQb5PHxbGq5dHGgtm_vIW2FjbhImfWl11TiTfeuCIaq4vh2DPNRyBq9c3NgPYYTRK3tWZPAJh9uWVJBZIGgFA5De_Uxu5odJ9Hloh5rjpBxW0jWHiNU9ffMwrtWSHjmqu2lpmxNV2XVaK0Zr0IsNP_8C9KhtflfExCWCCcPqTVfuXxFdY2gTNAzFzUdipeWmb8q0S4S0KCDldi-oxjcMM2mdXrnPCJMpFb1SNl4wwtNQ8gbhdAEywQ9NxFUm4GcoqLNfmaQmG3Qh-uZIj6v9uHiPOuB8cOWSzDZMC4d0Lw2J5q_-Epo-PdPU1eLZPsKTETK_GVZhrcsxIqysAorxue2AV2Ns53OgyJSfg4uu3Om6ZBEC1oTfDzIudDb6WNinZ3z6FkQOPpkPuTwCIRiMHl1lDeyYsOc5dmbHvjU4HFUJcC7KVYpmcSqN-m7Y8TCPyVxaq6xokJyL26s2Y7uNFP68sADvf8IttxT2cskrHkUGNB8iNqDRzf8hi1x-A1A7yOmM3k5Pc5bR537-aikXyjHm7MS7kX6pyxVs4m3fN6boRXGfqGY9jo5qnV3onVt5cIC5n2YWtXaAOe29_IeyKL-Hxlyvv-InRVLat9A59UjKy4wg=s320-w320-h200-p-k",
        "explanation":"To make a single comment line you can use '#' symbol...\n '''(Triple quotes) are used for multiline comments...comment line won't execute during program execution",
        "syntax": "# This is a comment line - single line \n print(\"Hello Mate !\")\n\n'''This is \n a multiline \n comment line''' \n print(\"How Are You ?\")",
        "next":"Next Topic\n /python_variables"
    },

    "python_variables":{
        "image":"https://lh3.googleusercontent.com/u/0/drive-viewer/AFGJ81pIeyFLbbTFQjTWy-B6Y8LzSLX8Hc9LzxSsQ04KLZ3x0nGisnOKOsAq0MsFInLwVz_kOu8--2nxXKwJHoixsZRBaaQe=w1920-h932",
        "explanation":"Variables is like a empty container used to hold data \n you can choose any name for the variable",
        "syntax": "x=10 \ny=20 # here 'x' and 'y' are variables and each assigned with integer data",
        "next":"Next Topic\n/python_Numeric_types "
    },

    "python_Numeric_types":{
        "image":"https://lh3.googleusercontent.com/fife/APg5EOacYGkmQV66DRE9D7031xr2P7whmohk1m2ESpgcYihTNxh7H6FhAWJvbqRFg4m6Kd5Q8kEwYkOL_f9KXR5OCrayDeSTl1k4bbxBEdEw97jUUdecTRKUiy2acrqhl6M75A_on5KveWaWlWECuMMxueZ8qwZjpIA7MIYaNDs7sat2Ai53RQtH9RHNoQHKHo7xeIYOaeM7FXk-nQW8zccI0QPZoDH43aN4dtqrlpLCwMZqiumD3jaLIkBi-WXHWY6StEGrFYmfHv5Ob6mU038X8kxRUSjAUkseWtKxxvD3lmuKkfA7Y1P4t3u3oyFNC4fMZsn7-nGGNv3WWaqH2YgXPYYO_W89WSZXtKHJPsUaLsWA7woMWwIHMLoArDi-sF1W-WSTXbk1CMmZ67rrktIDmvCViEMYDe5O9vJMcoO2FQwbBFTPCqQjILWAJw0q1UuqHdQ3ztyhhtxjmOr8f09PJMLANqTTU17f0mHuFWUb2_bhwKNHeTwZ6iRDK53SwOHJXFy1dQyjMD84wNcAVr8cbTu_zR2SNE8sL6nCoZy6AMLafTXl_vTdqvXhxUpUhB3fVn5BBTNl5zbZ9rHGJg2bIJaAHWBSllR-fQehFRqY2cQZ5UKLneDHu7Or--8TCDx8MSz333Wjs6MOwwrM_da8ftyFQE-srJVAdCX9ECBpWqXh5u5TQBARM1Wr3aS3GLCW8iPY8ux9jDqmSRrdTbAGHAg0cTTQfmiwtOgqjqR9iVlfYeKe56B0fX_Yj9m2TwBH24UKFPHvYMXp5JZvI909OeItQk5G3yqMoxnvL0P0jx9TLQDmtErRjRPndoHgIg5rdr5ziu4yKC59ONjJw2UNeBdNObTLv1eiRvLhgKPjNEwWextL4BMjCdroPx0dakvtzcfrqySNJ8S84tzBfIRarIJNgiwt08Wevkv3LzymUwFe_EnzD1D9d2CGtMUOJ30hISMfCYEXcNsID07Yd6jUsdbD0ZzRXy-v3y9_tnyQfLved_PIpEIQqgjU0LxUTkulCnXJuyMhBByC4Cq1OSQLiEsbtEgouvJzwUlBmbypV9zjt_03lnX9c6LNyYDUDRrtUz6h21LYFKXShR-WcdV6LCFKowG08JpCQCtpWzT-uCUiEDYyqoNovoi8OcFM-D_yeODMQm_HIIZkENtAHsIYr0Bseh7s4J_48CBZOMMK8pwpuCg6xaUD48Aan6KCyLpGjr_aa40FyuPhLaWdLVqsCAdB9DefmZJuhbavp6o0VvVi7i9BX3D0IyXIm0bCcOdFE-GCAwcolVK5UMeu_whUNGE0U0phkgHqWStibQBk1W1MGcH926z_51iLJa2JltrTxWFr37PDboNFkAVM96iQoePcLQEDF0PchFGu7uth1KL70yLPsf5YR-CBTQjKua4d27LxD82mYf9igwg8LFnErY0subN5JNQ7aCNl1AC9Y3aKAcW3O63ModghMulEI6gmzEIzPa9FjpSUF9bTQvV8--kU93f_4Z_sji5TLZNjzPDyjRpi7KsKtfMe_fi1bgL4irQ5Cg=s320-w320-h200-p-k",
        "explanation":"Python has three main numeric data types: integers (int), floating-point numbers (float),and complex numbers (complex).      \nIntegers are whole numbers, floats represent real numbers with decimal points, and complex numbers have both real and imaginary parts.",
        "syntax": " ",
        "next":"Next Topic\n/python_Type_Casting"
    },
    "python_Type_Casting":{
        "image":"https://lh3.googleusercontent.com/fife/APg5EOa6q4Z4owSzskpatVPNySbQHd7Z4FFwXKYhnCPMwhoP-vqyk1v_roak0J4ahzV0XQHK2PLSsnI2N9S3KIs2z7yIB9ChRD5aw7PIdQfPVJOdQdDpj6JKUaZZ8GKh_23SaoOZJMBmthdlB_zrPVcDrzl2p02EKaxYTREAwfarvv_Q90zdWDSonio-k5KFNfG496YDF6XDLSnphbmg1_0DD3fV_QwbMbO1sOH1_suwMolortOnmmFeqxnPzGIit6Oa3lL9xUuwI_eXUaleO2hLe9BKX8qiqWGUH-WO5ppihzN_qDuE7y0yNbjIPenMBGImcBDf5HiQEAB_QK3iGRDxJAreHERuiz8bQZs7Eq1f_bnax9VeSpqbLwdjX69cQeHxU2ad1f68zawYO1xixFqg5l9UKHvVSB1Mv8WyvKNU_0PweWmoBYSNQqDfUtNXkYDm8i4VNPpnqpjaPHJ6KMCy5Am9PL0QKB5mSiQIRqS3VZJxBSr-bygP5JbmJEheq9S4ZL2SU-wIvziqJl_cXh8a9vQikwTWIKJWBffbK9S7a4oLuiADSXR0kQec9EU2eUSRQAUlahVfIFacnjFMLeZ9SQfEyzrc7Ypw8D4yJ2o02vW0raHu-Ym4bLkrNTUmrMPquE6bwwdcFZmF6u1oBd4UCXRDTO8uOqS5ouej_iDntaMNyCDi1E8iKbZoj65Udrs6xC4_YOHz4LPKIYPeP7JN2BP8i49J3tYxqzRSOlw-9i3NnERWaY3kyfM4uxun3fkmYQy11M-VWTrAv0nIcyJyrFHa076RgKshkDVZyCrGxXpxTCu7OlLb0qH2sgUP0eBHp5Kj7uL2Np149k8_elLJiZsygxgdp3lN_wCfabEkgUGKcWX0O_E7iwJN2rt_kdSqCuHFIfsKI_i2vdko2sv4MyG_3XY3afUJcBitou0nz-v-gJPc9ZdDhHUDPgFZoDryUcnstm3KBvMw0xmT3LGnB0PTzdmNwzm5uxre2I8kLTkHH2k0feTzdK2nlzaH5qQ31dtuYUrbYYX2wCSsLyHkstxU6reuRre9ZhHPsHsoSxLyumxHZ0DeHwKtTs-3cZQKI4SJvBbKQgL3p7duJKwMWZG3ys92R0cY1lyA5pT6Hvcd7t1uX0y2VnUKheDeaeSWW-wz0rU0MBL-ti8-aQDt_LU3ndyyiTi1kO8wE50DXDY4Vz9k5F1tH4AUCt4gD9ankgJXx-ftt84Q9d6roYw2LEOKw7HFgNPVWycBpwKDhftAa6xjQDiauMoMGfnx5ALe102gxfhLUB4K5x1YvLYr06ec0MevZLXAfkIrXbviLMcLXNXp2Ky4BxtRDzSkHq65s9EqBPhYhLuooDvTgbTCvdjPGZ7vM0_Q1zTOeJSODL68qLpwb1pmx6kugFI5dKHx8MWyu0qwupucPunVx22JETUFmibNlh8DJHx57hCWs6FkxEoS47y4MxO04oFNdbr_NWD80AN9jeuEhganZMOo8Zq-3PwGwI3es6DAnrDy380oOqqh5CVKRAvtL5n2ahwsq_-nbg=s320-w320-h200-p-k",
        "explanation":"Type casting in Python refers to the process of converting one data type to another. Python provides built-in functions for performing type casting",
        "syntax": "int(x) - to type caste to integer\nstr(x) - to type caste to string\n float(x) - to type case to float",
        "next":"Next Topic\n/python_Strings"
    },
    "python_Strings":{
        "image":"https://lh3.googleusercontent.com/fife/APg5EObr6wyDDpgPq9CAvB7pMg3Tg1Q5YsKnSssaYyfFth8VDI1amqimcEaQXw-dKjSPcR5a-j3RrZ4eoSK2YuY2h3p3a2ex8YtTvJNTugxUwDz62fbRkce5SOmB6WKdvjqCpo7fJyF2G-NnkuXOi88YUNXLIHgdcnognyH2_xS0rHg_bEBRTd1z3QaFlciq9wVGITJGZaf1p9hmwZ4qVVeY9kF8bmosDQe7cBh19aqDm_cAol4kPPslcxikCiUH-i74_Dn7Fa33MX8tLd8q5IdLMeoQSGSjiQwAVLh1hRNkIWtORlLgT7AeD4Ppu9MwgmCInAZZJztqUrYllWJb5wp5Bn4wGrbNsQH7347ZhKtFKDSAUcfNnaNsIiAAt-4cAIusDbmZc6dV7XB3oEyo97vepvKcncQXt2-XqUbO9TjUOSfMvPKVP_8f3OHjiXFLLuzVwYV-Hyc9KdrXRx3Pnd-rhHDdtQlo0QY9xxcZ2tDfhcCZxq59AW_LQeCcHdGJFPuvjtfdDKXp-rLN-SgnHlVM3OjIMeBxC-siTSir35TdPvEuNJmyh3zVGEUx-w_g-uADgcyyisffF7qeMARhtb0_NRJeYkZYSpFj5e2ra0Dsq688zdyS2SOsDF6xHV9ok3RlAkm_o8NpBOGWbk_sJmUkqQ90n4zS5FlJefogfeBrf7xGIgH_ijd-UQUu11S7zw8YCs4hdAjI12CfIvCAPV9SR8JYiuR0oS6P19bKUxOfkw3gKgUSvE3MiOhzTCVuH7-ej_o6dFFhIMmreBcW5M9LFpRl96HI0AxE-ZW5AmKl2d-rtVtgbY6RhPHTKB38XLhBpXV_tFInc9mqHgWz3-aLvRZSmwwi5feDlRgzBWUnB1DdXSBrOb25mIFPjLi1j-LLnVJePe5ntT3F1pEptC7iJR_equWg20s960FcT5_9baCeCuAfSO4yBD8ts_Oew4B6qJq0DFr2kvQQi1tyK0Afs9IKY0c-E0fJaic6Ne1HpuMas-X93G9wWvCT_OLxV67U-LitA0NvPtcTcTQcMgNLO3I5HcYsNxbDBfAMj8FSskU6Ya1RFIx49TWWR8KFNz0DUP7pOQL3oluFPBE-u6tCNc4PRl9e6w1Xxq8Ff2hj3xnk9vvR23MSq9zysRNMrR2ATsPWdMJA5tN5CxrMbOrA_1yHbo_Xt7UMinlTMCHYeNIzsdp8bU0BxJWFKa0OK39wPQcgroJN-n-Fy8-j-X5fKV1px7diLNJocum2wujoPCie3sZdNEXNZhZ6LI5fsVUx5iGp30RxrFeRs7RzILgg2H-pqoCTClxEk6o6MCvc-rkCtf5KgkzCHqILOcDeR-tSsHE2zMojk5-8ThaTqGo8kbeI0tOkEaC3pQttcw6L-KJa6kdhsnjbk7euD0zAnSE8z0mHOCBe3odYBCd1n8jB656R9r5CB8ZguOBaeCg95FKhWef75pBNrrsTC3QUEajPl41hJnIONksxBhGP3YAjVnHD2XlntQ6vg0-uPBtpoNk2j8WGhNjrdUVfNWjJPOoXwhQEkQ=s320-w320-h200-p-k",
        "explanation":"Strings in python are surrounded by either single quotation marks, or double quotation marks.'hello' is the same as \"hello\"",
        "syntax": " string1=\"This is a string\"\n string2='This is also a string'",
        "next":"Next Topic\n/python_String_Slicing"
    },
    "python_String_Slicing":{
        "image":"https://lh3.googleusercontent.com/fife/APg5EOYi9rcV_FVWh75ue036m1yuVc_P4mKew-YLhofnk1mIzLY_FXDPcDI0fkv24NXNWxk1ZPYdUkC-0ZGJTgaVkcTWe73cg0K62MOmt9uRcvTv3HOJWseCtbhFJUTVKvHVZ4WYCvBjUAMUU2FGxGOtiCGRHFbtZf1GN8VfAItK5bkk5d0SImwvb-Mj_RLxHmbofw9tjbL3M4DIz2TZd5ryk4IwrlTiJPzLOe7wenon6NHWLrEsewndBDTVirz_b79c9xQ7REpktcwQTonKLkGnLZAr_FIyhQbdwkx62w3M7bVwA1l9b6uHWvNfYcewjgMQF2PqNkFBZtuJfdas9T791su7jNQOVy9efRQGNLN3Po0ql30e_8S58TWf-6XnOZofroZR6SwOQgym71WBUpQEEHrEoy_BPSG8Wr4e96BZru7Q-Qyor7KDGa3v5TlCEaM-HH8vEL_nU9utQrVZJCst5YxDCk3du3fTKj0d5wEBxiOd72dH-N6Lu8LGGd5ffdV18-xtuonnijCuCSq3enaLQYQSoTbFv8G_1w6CmmASrwV-z1_cBg2lm-QSd7T5l3NB_Vuuf0N2y3WwuB5k5iN1V9lhJ_mlhFMd-hOWITYZ-NI3QiJc31oy9Q3nbeADcMSUWmE86Ac750mH33D7_uJBcO7LqofAV2byhV2WP-Wuc5SImzjX1cXgztE0sIMtf-pF134sG76kXNTjmP_OgCuGMj17AybktN8gnWU9saX0K-5FhIYW_ix3igonuNQ2_A2tRS9rubmIelSDsO-5EwJc5U_D3wWPKRdYgpE_uOJkWkrGXAiSz1hw9Kntp955_UGUp7rKkd_0lh4x4xOGnMCd77kLeXdgq05umKfpeJjjDgA3YAMuoWJgoDo1TxFpxUyvnFTTHNfKfHNaCxOOe-eCtEtCLUbb9qd_8H5pc2e2-lcZhZjmtCmYUqqKX_hhLHMysq-NNEgysJtV2CAVVxoI0YPVyHEyvl-ZFYQi_3gP7Yz35aqVI_iJ7vbTLlOvQeF-msenKUEHQ66SpFtth2DQcTn4yWTuOX9lwJ5wyuueNudFji-mxpWBzfyCEJqCb6PAuYhZTxeyfHKVwn64bXpn0gDH94yBjsNRQzqPhNatvyzKgSeF0QsA38uvYmDWWjcDYMOLp2s9guhExwvWO0dy6Ltd1hPQdgTKcen3F6VGR8gJ3mp1XGiG8J0mzKjh_L4GEnnYHpM6XXko76fex75h9z6lXyLEmE16ap9K1iG6Y0HJYor3NWU5JVv0d1JhmPnNwgEdybEihYRSSSh5Rjf6VxG_-2SGQtGKW3qWej_O207pk49SqCFkxGu1y5ibWHLDt1e1Sufa0E0C1_s9bAabGvmlf3kBM_Px8KRJm0_RndV7oHF6wICJvyiw16K3JGlDoqT6JieqNDjpBm4j2jijSIID3Mv7Ss7Mh8Lt0poWXYWeifiCLDY4U07Ig_t0IcxAAoFWcpPzgKBJnjA-YKhc-31Dmdq5NrgRML4GGWw0jFwj0S0rfNnJXFbKYpllwi1uw3J7Bw=s320-w320-h200-p-k",
        "explanation":"You can return a range of characters by using the slice syntax.Specify the start index and the end index, separated by a colon, to return a part of the string.",
        "syntax": " b = \"Hello, World!\" \nprint(b[2:5]) \nYou can return a range of characters by using the slice syntax.\n",
        "next":"Next Topic\n/python_Modify_Strings"
    },
    "python_Modify_Strings":{
        "image":"https://lh3.googleusercontent.com/fife/APg5EOZErIIOfD6m-OhEi1docTkisiE2uY8ew2nxlB50jgFlga62aeKO4LqhoJjsegh_1c1c93yfLTgmrFhfuA-cHnvwzgbT472w0uyYXJaK1-eDXW0ibxDVVBH5zZhDbYKNyAlk_Bao9ectlsdXEaeBwssfFRmXEQcgFb_cAofiNmRZ8_ajcDB4yOsZO2uH0dSP2lRFKACd-7_SJXYXLcl4HaSHoPhMAC-6sH-WjkBSUudYf_yx3366qWEtjQrJLO70dK5OEX42H4M2USSpvMI5MRgM8TXyJeoIQ91Jz_BaH6AyZdezaf7dp3PFTIoAFaucL3e5X20MXjIBUB64njVGSSkWa8A14RydPq-izxRfNdzdF4N-F5Xa6Pxgk_gPnJGIpxYmgYR7yGVJrwXvbWyMODql0xiaDxzSkF4YXSDeQRxVCpOO7MZYsUALj21bBshgCn0nwFdLqIK1Zv5TUwTCzFpIzgXgxrYrnXaI2Pfj51Zb4j8OWUepr0WqPBJxf2mimcwjMmdgNDwGmp9IweqcwKwQW2xS4Qu60ZfEK3B6L1iAR79u6sor2ZD2vcLspP0wCiBY5SR5sHNrX1kixwJpF8T20NXfZJX5DyaXWxWnir_4oLSb2HJ9F8YpL3JNNCaZq8rAjGqLoV1AaAQYC3s4gwjZ8ZCCgi4nBSMqo_BrxtIFK-hjDe0-cVwB64s5Ig10IDdebzK8s7i-_q5e-Hu6J7Bmfb5NSjxwEJHdqyDWEF8oULlKTf_vLuEovHA_nlrsxpyqWIkiYgSLakL2OYt2R2f0ewEc0GEILDYSoc7IvKIOzNCtJKd1LCF4e0v6MJW7Ti-CpbG_8DqMEEIQD6ae5DsbNy4xAh42uHcjiGIRBzZA2qZczw46H_wUfFY-dWDCYYCWuG1pPhE0i1CSQ6PiGxEIwYBt5AvRZ8NITPvKnZgqD-C1SXp65rpFiKorn7hmVXVx4HYvPTzldnIE0cQkT-ZH8Arx4Pl0V3KyEIeuqRlAt85jfpdRht3tYzs33yRALXbA_UwiSp7mM23AH3L9Np27F-v2O7QoephijOZw_U89kkJb1hAlE7BZQJF16Dzn7aSQ3F4-WhWmvcRsAZ8pc9jf-nzH07rayWp4XnB3uMAiBoA89Y1cb4nmY4q-vE16qagZl3f7YO5RhfVK3cVCXovg5X9YeJr0-qkvbBUW1ixyqzuY9cSC0HC-nc1VhDca4xcYjIrTNOhC4us28D80xOLjxRQwuWMyYNIiZs6txV9qcASlCpmDA0tzWBWHEJ7yZOrhl5iaAWgbhZFsWbh4tuXOzpb9qh5-zNo4trfbIfmjM2FFXaSjADczkFin-LilE6rUdf051DEDkyIDJKPm5zeW9LVTB3Roc-sHunJcJqHOmeq4PmPIeWLQzDtrVHg6kLSjdHXt3QwBwb0zOGppVqwTy_m2y2SNk2TOYlvFUwWWFyV047nBrKvxOluUKsmo-o6WyWKpo317szYRSGov2qPPOHV4U392bRlidyAIpLa34BcdSg4HpmLMKep4knSSe4zmZQ=s320-w320-h200-p-k",
        "explanation":"The upper() method returns the string in upper case, \nThe lower() method returns the string in lower case,\nThe strip() method removes any whitespace from the beginning or the end",
        "syntax": "a = \"Hello, World!\"\nprint(a.upper()) \n a = \"Hello, World!\" print(a.lower())",
        "next":"Next Topic\n/python_String_Concatenation"
    },
    "python_String_Concatenation":{
        "image":"",
        "explanation":"To concatenate, or combine, two strings you can use the + operator.",
        "syntax": "a = \"Hello\" b = \"World\" \nc = a + b \nprint(c) ",
        "next":"Next Topic\n/python_Escape_Characters"
    },
    "python_Escape_Characters":{
        "image":"",
        "explanation":"You will get an error if you use double quotes inside a string that is surrounded by double quotes\nTo solve this problem..use escape characters",
        "syntax": " '\\' - To use Single Quote \n '////' - To use Backslash \n",
        "next":"Next Topic\n/python_Booleans"
    },
    "python_Booleans":{
        "image":"",
        "explanation":"When you compare two values, the expression is evaluated and Python returns the Boolean answer",
        "syntax": "print(10 > 9) #True \nprint(10 == 9) #False \nprint(10 < 9) #False",
        "next":""
    }
}