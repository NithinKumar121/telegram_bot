{
    "c_data_types":{
        "image": " ",
        "explanation": "As explained in the Variables chapter, a variable in C must be a specified \ndata type, \nand you must use a format specifier inside the printf() function to display it:The data type specifies the size and type of information the variable will store.In this tutorial, we will focus on the most basic ones:", 
        "syntax": "\n  // Create variablesint myNum = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Integer (whole number)float \n  myFloatNum = 5.99;\u00a0\u00a0 // Floating point numberchar myLetter = 'D';\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \n  Character// Print variablesprintf(\"%d\\n\", myNum);\n  printf(\"%f\\n\", myFloatNum);printf(\"%c\\n\", myLetter);\n  float myFloatNum = 3.5;double myDoubleNum = 19.99;\n  printf(\"%f\\n\", myFloatNum); \n  // Outputs 3.500000printf(\"%lf\", myDoubleNum); // Outputs \n  19.990000\n  float myFloatNum = 3.5;printf(\"%f\\n\", myFloatNum); \n  // Default will show 6 digits after the decimal pointprintf(\"%.1f\\n\", \n  myFloatNum); // Only show 1 digitprintf(\"%.2f\\n\", myFloatNum); // Only \n  show 2 digitsprintf(\"%.4f\", myFloatNum);\u00a0\u00a0 // Only show 4 digits", 
        "next": " "
        }
}